@page "/book/delete/{Id}"
@inject NavigationManager NavigationManager
<h2>Delete Book</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this Book?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Name</td>
                <td>@book.Name</td>
            </tr>
            <tr>
                <td>Author</td>
                <td>@book.Author</td>
            </tr>
            <tr>
                <td>Description</td>
                <td>@book.Description</td>
            </tr>
            <tr>
                <td>Genre</td>
                <td>@book.Genre</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveBook(book.Id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    HttpClient httpClient = new HttpClient();
    private string baseurl = "http://localhost:5273/api/book/";
    [Parameter]
    public string Id { get; set; }
    Book book = new Book();
    protected override async Task OnInitializedAsync()
    {
        book = await httpClient.GetFromJsonAsync<Book>(baseurl + Id);
    }
    protected async Task RemoveBook(int id)
    {
        await httpClient.DeleteAsync(baseurl + id.ToString());
        NavigationManager.NavigateTo("/booklist");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/booklist");
    }
}