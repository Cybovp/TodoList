@page "/book/add"
@page "/book/edit/{Id}"
@inject NavigationManager NavigationManager
<h1>@Title Book</h1>
<hr />
<EditForm Model="@book" OnValidSubmit="SaveBook">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="UserID" class="form-label">User ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="book.UserID" />
        </div>
        <ValidationMessage For="@(() => book.UserID)" />
    </div>
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Name" />
        </div>
        <ValidationMessage For="@(() => book.Name)" />
    </div>
    <div class="mb-3">
        <label for="Author" class="form-label">Author</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Author" />
        </div>
        <ValidationMessage For="@(() => book.Author)" />
    </div>
    <div class="mb-3">
        <label for="Desciption" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Description" />
        </div>
        <ValidationMessage For="@(() => book.Description)" />
    </div>
    <div class="mb-3">
        <label for="Genre" class="form-label">Genre</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Genre" />
        </div>
        <ValidationMessage For="@(() => book.Genre)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    HttpClient httpClient = new HttpClient();
    private string baseurl = "http://localhost:5273/api/book/";
    [Parameter]
    public string Id { get; set; }
    protected string Title = "Add";
    protected Book book = new();
    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            Title = "Edit";
            book = await httpClient.GetFromJsonAsync<Book>(baseurl + Id);
        }
    }
    protected async Task SaveBook()
    {
        if (book.Id != 0)
        {
            await httpClient.PutAsJsonAsync(baseurl, book);
        }
        else
        {
            await httpClient.PostAsJsonAsync(baseurl, book);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/booklist");
    }
}
